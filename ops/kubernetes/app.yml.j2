# purpose: configuration for kubernetes that is used during deployment on the internal QA cluster

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ps_coding_interview
  name: master
  labels:
    src: BK
    app: ps-coding-interview-api
    prj: '{{ project_name }}'
    sha: '{{ commit_sha }}'
    build: '{{ build_number }}'
spec:
  replicas: 1
  revisionHistoryLimit: 1
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      app: ps-coding-interview-api
      branch: master
  template:
    metadata:
      labels:
        app: ps-coding-interview-api
        branch: '{{ branch_name }}'
        sha: '{{ commit_sha }}'
        build: '{{ build_number }}'
    spec:
      containers:
        - name: nginx
          image: ??
          command: ['nginx-debug', '-g', 'daemon off;']
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 50m
              memory: 64Mi
          readinessProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 20

        - name: node
          image: ??
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 256Mi
          readinessProbe:
            httpGet:
              port: 3000
              path: /api
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 3
            timeoutSeconds: 10
            failureThreshold: 5

        - name: db
          image: ??
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'envvars-{{ branch_name }}'
                  key: DB_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: 'envvars-{{ branch_name }}'
                  key: DB_DATABASE
          ports:
            - containerPort: 5432
          resources:
            requests:
              cpu: 150m
              memory: 256Mi
            limits:
              cpu: 150m
              memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  namespace: '{{ project_name }}'
  name: '{{ branch_name }}'
  labels:
    src: BK
    app: ps-coding-interview-api
    prj: '{{ project_name }}'
    sha: '{{ commit_sha }}'
    build: '{{ build_number }}'
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      name: http
    - port: 3000
      protocol: TCP
      name: api
    - port: 5432
      protocol: TCP
      name: postgres
  selector:
    app: ps-coding-interview-api
    branch: '{{ branch_name }}'

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: '{{ project_name }}'
  name: '{{ branch_name }}'
  labels:
    src: BK
    app: ps-coding-interview-api
    prj: '{{ project_name }}'
    sha: '{{ commit_sha }}'
    build: '{{ build_number }}'
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: '{{ branch_fqdn }}'
      http:
        paths:
          - path: /
            backend:
              serviceName: '{{ branch_name }}'
              servicePort: http
